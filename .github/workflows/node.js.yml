# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      sonarqube:
        description: "The sonarqube job output"
        value: ${{ jobs.sonarqube.outputs }}
      depcheck:
        description: "The depcheck job output"
        value: ${{ jobs.depcheck.outputs.depcheck }}
      build:
        description: "The build job output"
        value: ${{ jobs.build.outputs.build }}
      gitleaks:
        description: "The gitleaks job output"
        value: ${{ jobs.gitleaks.outputs.gitleaks }}

jobs:
  sonarqube:
    name: Static code analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: SonarQube scan
        uses: kitabisa/sonarqube-action@v1.2.0
        with:
          host: ${{ secrets.SONARQUBE_HOST }}
          login: ${{ secrets.SONARQUBE_TOKEN }}
  containerScan:
    name: Container scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the container image
        run: docker compose up -d
      - uses: anchore/scan-action@v3
        with:
          image: "todo-be:latest"
          fail-build: true
  depcheck:
    name: Dependency check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - run: npm install -g depcheck
      - run: depcheck ./ --ignores="cross-env,debug,jade,jest,joi,nodemon,pg,sequelize-cli"
        working-directory: backend
      - run: depcheck ./ --ignores="autoprefixer,tailwindcss,postcss,react-*,eslint-config-react-app"
        working-directory: frontend

  gitleaks:
    name: Secret scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - run: npm ci
      - run: npm i pg
        working-directory: backend
      - run: docker compose up -d
      - run: npm run build --if-present
      - run: npm test
  logs:
    runs-on: ubuntu-latest
    needs: [build, depcheck, gitleaks, sonarqube]
    steps:
      - run: echo jghfjhgf ${{needs.sonarqube.outputs}} seconds ${{needs.depcheck.outputs}}
